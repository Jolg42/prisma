name: npm - release to latest
run-name: npm - release ${{ github.event.inputs.targetVersion }} from ${{ github.ref_name }} on latest tag

on:
  workflow_dispatch:
    inputs:
      targetVersion:
        description: 'Version to publish on latest tag (e.g. 5.0.0)'
        type: string
        required: true
      skipEcosystemTestsChecks:
        description: 'Skip ecosystem tests checks? (e.g. true)'
        type: boolean
      skipPackages:
        description: 'Skip some packages? (e.g. `@prisma/debug,@prisma/internals`)'
        type: string
        required: false
      onlyPackages:
        description: 'Only publish some packages? (e.g. `@prisma/debug,@prisma/internals`)'
        type: string
        required: false

jobs:
  release:
    timeout-minutes: 60
    environment: "npm-latest"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/setup
        with:
          node-version: 16

      - name: Publish all packages to npm
        run: |
          echo "BUILDKITE_TAG $BUILDKITE_TAG"
          echo "SKIP_ECOSYSTEMTESTS_CHECK $SKIP_ECOSYSTEMTESTS_CHECK"
          pnpm run publish-all
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          BUILDKITE_TAG: ${{ github.event.inputs.targetVersion }}
          SKIP_ECOSYSTEMTESTS_CHECK: ${{ github.event.inputs.skipEcosystemTestsChecks }}
          BUILDKITE: true
          BUILDKITE_BRANCH: ${{ github.ref_name }}
          ONLY_PACKAGES: ${{ github.event.inputs.onlyPackages }}
          SKIP_PACKAGES: ${{ github.event.inputs.skipPackages }}
          GITHUB_CONTEXT: ${{ toJson(github) }}

  failure:
    needs:
      - release
    if: ${{ failure() }}
    name: Communicate failure
    runs-on: ubuntu-latest
    steps:
      - name: Set current job url in SLACK_FOOTER env var
        run: echo "SLACK_FOOTER=<$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID|Click here to go to the job logs>" >> $GITHUB_ENV

      - name: Slack Notification on Failure
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_TITLE: 'prisma/prisma Release failed :x:'
          SLACK_COLOR: '#FF0000'
          # SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          # SLACK_CHANNEL: feed-prisma-daily-build-failures TODO
